---
title: "proj_eda Normalized Data"
author: Group 7

Output: html
format:
  html:
    embed-resources: true
    df-print: kable
---

```{r, echo=FALSE, message=FALSE}
library(tidyverse) |> suppressPackageStartupMessages()
library(ggplot2) |> suppressPackageStartupMessages()
library(dplyr) |> suppressPackageStartupMessages()
library(reshape2) |> suppressPackageStartupMessages()
```

## Perform EDA (Exploratory Data Analysis) using some Data Visualizations.

```{r}
merged_df <- read.csv("./all_years/all_yrs.csv")
norm_df <- read.csv("./all_years/all_yrs_norm.csv")
```

```{r, echo=FALSE, message=FALSE}
sample_n(norm_df, 5)
```

```{r}
# Gather data into long format for easier plotting
long_data <- norm_df %>%
  select(UNITID, total_ops_2018, total_ops_2019, total_ops_2020, total_ops_2021, total_ops_2022) %>%
  pivot_longer(cols = starts_with("total_ops"), 
               names_to = "year", 
               values_to = "total_ops") %>%
  mutate(year = gsub("total_ops_", "", year)) 

# Summarize total athletic spending by year
summary_data <- long_data %>%
  group_by(year) %>%
  summarize(mean_total_ops = mean(total_ops, na.rm = TRUE))

# Create barplot with revised units
ggplot(data = summary_data, aes(x = year, y = mean_total_ops, fill = year)) +
  geom_bar(stat = "identity", alpha = 0.8, color = "black") +
  labs(title = "Average Per-Student Athletic Spending Across Years (2018â€“2022)",
       x = "Year",
       y = "Mean Athletic Spending Per Student (USD)",
       fill = "Year") +
  theme_minimal() +
  scale_fill_brewer(palette = "Set3")

```
The plot shows the mean total athletic spending from 2018 to 2022, highlighting a decline in 2021, possibly due to disruptions like the COVID-19 pandemic. Spending increased again in 2022, surpassing previous years, indicating a recovery or increased investment in athletics.

Make a Means dataframe for means across 5 years of the variables
```{r}
# Create a dataframe for calculating means for the specified columns
means_df <- norm_df %>%
  rowwise() %>%
  mutate(
    coach_comp_third = mean(c(coach_comp_third_2018, coach_comp_third_2019, coach_comp_third_2020, coach_comp_third_2021, coach_comp_third_2022), na.rm = TRUE),
    support_comp_third = mean(c(support_comp_third_2018, support_comp_third_2019, support_comp_third_2020, support_comp_third_2021, support_comp_third_2022), na.rm = TRUE),
    coach_comp = mean(c(coach_comp_2018, coach_comp_2019, coach_comp_2020, coach_comp_2021, coach_comp_2022), na.rm = TRUE),
    guarantees = mean(c(guarantees_2018, guarantees_2019, guarantees_2020, guarantees_2021, guarantees_2022), na.rm = TRUE),
    total_ops = mean(c(total_ops_2018, total_ops_2019, total_ops_2020, total_ops_2021, total_ops_2022), na.rm = TRUE),
    aid = mean(c(aid_2018, aid_2019, aid_2020, aid_2021, aid_2022), na.rm = TRUE),
    support_comp = mean(c(support_comp_2018, support_comp_2019, support_comp_2020, support_comp_2021, support_comp_2022), na.rm = TRUE),
    severance = mean(c(severance_2018, severance_2019, severance_2020, severance_2021, severance_2022), na.rm = TRUE),
    recruiting = mean(c(recruiting_2018, recruiting_2019, recruiting_2020, recruiting_2021, recruiting_2022), na.rm = TRUE),
    team_travel = mean(c(teamtravel_2018, teamtravel_2019, teamtravel_2020, teamtravel_2021, teamtravel_2022), na.rm = TRUE),
    equip = mean(c(equip_2018, equip_2019, equip_2020, equip_2021, equip_2022), na.rm = TRUE),
    game_expenses = mean(c(game_expenses_2018, game_expenses_2019, game_expenses_2020, game_expenses_2021, game_expenses_2022), na.rm = TRUE),
    marketing = mean(c(marketing_2018, marketing_2019, marketing_2020, marketing_2021, marketing_2022), na.rm = TRUE),
    camps = mean(c(camps_2018, camps_2019, camps_2020, camps_2021, camps_2022), na.rm = TRUE),
    spirits = mean(c(spirit_2018, spirit_2019, spirit_2020, spirit_2021, spirit_2022), na.rm = TRUE),
    facilities = mean(c(facilities_rentals_2018, facilities_rentals_2019, facilities_rentals_2020, facilities_rentals_2021, facilities_rentals_2022), na.rm = TRUE),
    overhead = mean(c(overhead_2018, overhead_2019, overhead_2020, overhead_2021, overhead_2022), na.rm = TRUE),
    indirect_institutional = mean(c(indirect_institutional_2018, indirect_institutional_2019, indirect_institutional_2020, indirect_institutional_2021, indirect_institutional_2022), na.rm = TRUE),
    medical = mean(c(medical_2018, medical_2019, medical_2020, medical_2021, medical_2022), na.rm = TRUE),
    membership = mean(c(memberships_2018, memberships_2019, memberships_2020, memberships_2021, memberships_2022), na.rm = TRUE),
    meals = mean(c(meals_2018, meals_2019, meals_2020, meals_2021, meals_2022), na.rm = TRUE),
    otherops = mean(c(otherops_2018, otherops_2019, otherops_2020, otherops_2021, otherops_2022), na.rm = TRUE),
    bowl_expenses = mean(c(bowl_expense_2018, bowl_expense_2019, bowl_expense_2020, bowl_expense_2021, bowl_expense_2022), na.rm = TRUE),
    prof_def = mean(c(prof_def_2018, prof_def_2019, prof_def_2020, prof_def_2021, prof_def_2022), na.rm = TRUE),
    bowl_coachcomp = mean(c(bowl_coachcomp_2018, bowl_coachcomp_2019, bowl_coachcomp_2020, bowl_coachcomp_2021, bowl_coachcomp_2022), na.rm = TRUE),
    total_expenditure = mean(c(total_expendature.x, total_expendature.y, total_expendature.x.x, total_expendature.y.y), na.rm = TRUE),
    discounts_to_tuition = mean(c(discounts_to_tuition.x, discounts_to_tuition.y, discounts_to_tuition.x.x, discounts_to_tuition.y.y), na.rm = TRUE),
    gifts = mean(c(gifts.x, gifts.y, gifts.x.x, gifts.y.y), na.rm = TRUE),
    research_expenditure = mean(c(reseach_expendatures.x, reseach_expendatures.y, reseach_expendatures.x.x, reseach_expendatures.y.y), na.rm = TRUE),
    graduation_rate = mean(c(graduation_rate.x, graduation_rate.y, graduation_rate.x.x, graduation_rate.y.y), na.rm = TRUE)
  ) %>%
  ungroup() %>%
  select(UNITID, school_name.x, coach_comp_third, support_comp_third, coach_comp, guarantees, total_ops, aid, 
         support_comp, severance, recruiting, team_travel, equip, game_expenses, marketing, camps, spirits, facilities,
         overhead, indirect_institutional, medical, membership, meals, otherops, bowl_expenses, prof_def, bowl_coachcomp,
         total_expenditure, discounts_to_tuition, gifts, research_expenditure, graduation_rate)
```

```{r}
colnames(means_df)[colnames(means_df) == "school_name.x"] <- "school_name"
sample_n(means_df, 5)
```

```{r}
# Select relevant columns for analysis
two_groups_df <- means_df %>%
  select(total_ops, discounts_to_tuition, gifts, graduation_rate, research_expenditure)

# Scale 'total_ops' into spending groups (Low, High)
two_groups_df <- two_groups_df %>%
  mutate(total_ops_group = cut(
    total_ops,
    breaks = quantile(total_ops, probs = seq(0, 1, 0.5), na.rm = TRUE),
    labels = c("Low", "High"),
    include.lowest = TRUE
  ))

two_groups_df <- two_groups_df %>% filter(!is.na(total_ops_group))


# Select relevant columns for analysis
three_groups_df <- means_df %>%
  select(total_ops, discounts_to_tuition, gifts, graduation_rate, research_expenditure)

# Scale 'total_ops' into spending groups (Low, Medium, High)
three_groups_df <- three_groups_df %>%
  mutate(total_ops_group = cut(
    total_ops,
    breaks = quantile(total_ops, probs = seq(0, 1, 0.33), na.rm = TRUE),
    labels = c("Low", "Medium",  "High"),
    include.lowest = TRUE
  ))

three_groups_df <- three_groups_df %>% filter(!is.na(total_ops_group))
```

```{r}
dependent_vars <- c("discounts_to_tuition", "gifts", "graduation_rate", "research_expenditure")
independent_var <- "total_ops_group"

two_groups_subset <- two_groups_df[, c(dependent_vars, independent_var)]
two_groups_subset <- na.omit(two_groups_subset)

three_groups_subset <- three_groups_df[, c(dependent_vars, independent_var)]
three_groups_subset <- na.omit(three_groups_subset)
```

```{r}
head(three_groups_df, 5)
```
```{r}
# Calculate group means
group_means <- three_groups_df %>%
  group_by(total_ops_group) %>%
  summarize(across(c(discounts_to_tuition, gifts, graduation_rate, research_expenditure), mean, na.rm = TRUE))

# Barplot for means
ggplot(group_means, aes(x = total_ops_group, y = discounts_to_tuition, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Discounts to Tuition by Athletic Spending Group", x = "Spending Group", y = "Mean Discounts to Tuition Per Student (USD)") +
  theme_minimal()

ggplot(group_means, aes(x = total_ops_group, y = gifts, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Gifts by Athletic Spending Group", x = "Spending Group", y = "Mean Gifts Per Student (USD)") +
  theme_minimal()

ggplot(group_means, aes(x = total_ops_group, y = research_expenditure, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Research Expenditure by Athletic Spending Group", x = "Spending Group", y = "Mean Research Expenditure Per Student USD") +
  theme_minimal()

ggplot(group_means, aes(x = total_ops_group, y = graduation_rate, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Graduation Rate by Athletic Spending Group", x = "Spending Group", y = "Mean Graduation Rate") +
  theme_minimal()

```
```{r}
# Select relevant columns for analysis
three_groups_df_1 <- means_df %>%
  select(coach_comp, discounts_to_tuition, gifts, graduation_rate, research_expenditure)

# Scale 'coach_comp' into spending groups (Low, Medium, High)
three_groups_df_1 <- three_groups_df_1 %>%
  mutate(coach_comp_group = cut(
    coach_comp,
    breaks = quantile(coach_comp, probs = seq(0, 1, 0.33), na.rm = TRUE),
    labels = c("Low", "Medium", "High"),
    include.lowest = TRUE
  ))

# Filter out rows with missing coach_comp_group
three_groups_df_1 <- three_groups_df_1 %>% filter(!is.na(coach_comp_group))
```

```{r}
# Calculate group means
group_means_1 <- three_groups_df_1 %>%
  group_by(coach_comp_group) %>%
  summarize(across(c(discounts_to_tuition, gifts, graduation_rate, research_expenditure), mean, na.rm = TRUE))
```

```{r}
# Barplot for means
ggplot(group_means_1, aes(x = coach_comp_group, y = discounts_to_tuition, fill = coach_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Discounts to Tuition by Coach Compensation Group", x = "Coach Compensation Group", y = "Mean Discounts to Tuition Per Student (USD)") +
  theme_minimal()

# Barplot for means
ggplot(group_means_1, aes(x = coach_comp_group, y = gifts, fill = coach_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Gifts by Coach Compensation Group", x = "Coach Compensation Group", y = "Mean Gifts Per Student (USD)") +
  theme_minimal()

# Barplot for means
ggplot(group_means_1, aes(x = coach_comp_group, y = research_expenditure, fill = coach_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Research Expenditure by Coach Compensation Group", x = "Coach Compensation Group", y = "Mean Research Expenditure Per Student (USD)") +
  theme_minimal()

# Barplot for means
ggplot(group_means_1, aes(x = coach_comp_group, y = graduation_rate, fill = coach_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Graduation Numbers by Coach Compensation Group", x = "Coach Compensation Group", y = "Mean Graduation Numbers") +
  theme_minimal()

```



```{r}
# Select relevant columns for analysis
three_groups_df_2 <- means_df %>%
  select(support_comp, discounts_to_tuition, gifts, graduation_rate, research_expenditure)

# Scale 'support_comp' into spending groups (Low, Medium, High)
three_groups_df_2 <- three_groups_df_2 %>%
  mutate(support_comp_group = cut(
    support_comp,
    breaks = quantile(support_comp, probs = seq(0, 1, 0.33), na.rm = TRUE),
    labels = c("Low", "Medium", "High"),
    include.lowest = TRUE
  ))

# Filter out rows with missing coach_comp_group
three_groups_df_2 <- three_groups_df_2 %>% filter(!is.na(support_comp_group))
```

```{r}
head(three_groups_df_2)
```

```{r}
# Calculate group means
group_means_2 <- three_groups_df_2 %>%
  group_by(support_comp_group) %>%
  summarize(across(c(discounts_to_tuition, gifts, graduation_rate, research_expenditure), mean, na.rm = TRUE))
```

```{r}
# Barplot for means
ggplot(group_means_2, aes(x = support_comp_group, y = discounts_to_tuition, fill = support_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Discounts to Tuition by Support Compensation Group", x = "Support Compensation Group", y = "Mean Discounts to Tuition Per Student (USD)") +
  theme_minimal()

# Barplot for means
ggplot(group_means_2, aes(x = support_comp_group, y = gifts, fill = support_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Gifts by Support Compensation Group", x = "Support Compensation Group", y = "Mean Gifts Per Student (USD)") +
  theme_minimal()

# Barplot for means
ggplot(group_means_2, aes(x = support_comp_group, y = research_expenditure, fill = support_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Research Expenditure by Support Compensationn Group", x = "Support Compensation Group", y = "Mean Research Expenditure Per Student (USD)") +
  theme_minimal()

# Barplot for means
ggplot(group_means_2, aes(x = support_comp_group, y = graduation_rate, fill = support_comp_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Graduation Numbers by Support Compensation Group", x = "Support Compensation Group", y = "Mean Graduation Numbers") +
  theme_minimal()

```


```{r}
# Compute correlations
correlation_matrix <- three_groups_df %>%
  select(discounts_to_tuition, gifts, graduation_rate, research_expenditure) %>%
  cor(use = "complete.obs")

# Heatmap
melted_corr <- melt(correlation_matrix)
ggplot(melted_corr, aes(Var1, Var2, fill = value)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "blue", high = "red", mid = "white", midpoint = 0, limit = c(-1, 1), space = "Lab") +
  theme_minimal() +
  labs(title = "Correlation Heatmap", x = "", y = "")

```
Variables with strong correlations (e.g., discounts_to_tuition and gifts) might be influencing each other and could provide insights when analyzed further.
Weaker correlations (e.g., involving graduation_rate) suggest these variables may be independent or have limited direct relationships with others.

```{r}
# Violin plot 
ggplot(three_groups_df, aes(x = total_ops_group, y = discounts_to_tuition, fill = total_ops_group)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.2, fill = "white") +
  labs(title = "Tuition Discounts by Athletic Spending Group", x = "Athletic Spending Group", y = "discounts to tuition") +
  theme_minimal()

ggplot(three_groups_df, aes(x = total_ops_group, y = gifts, fill = total_ops_group)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.2, fill = "white") +
  labs(title = "Gifts by Athletic Spending Group", x = "Athletic Spending Group", y = "gifts") +
  theme_minimal()

ggplot(three_groups_df, aes(x = total_ops_group, y = research_expenditure, fill = total_ops_group)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.2, fill = "white") +
  labs(title = "Research Expenditure by Athletic Spending Group", x = "Athletic Spending Group", y = "Research Expenditure") +
  theme_minimal()

ggplot(three_groups_df, aes(x = total_ops_group, y = graduation_rate, fill = total_ops_group)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.2, fill = "white") +
  labs(title = "Graduation Rate by Athletic Spending Group", x = "Athletic Spending Group", y = "Graduation Rate") +
  theme_minimal()

```

```{r}
head(two_groups_df, 5)
```

```{r}
# Calculate group means
group_means <- two_groups_df %>%
  group_by(total_ops_group) %>%
  summarize(across(c(discounts_to_tuition, gifts, graduation_rate, research_expenditure), mean, na.rm = TRUE))

# Barplot for means: Discounts to Tuition
ggplot(group_means, aes(x = total_ops_group, y = discounts_to_tuition, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Discounts to Tuition by Athletic Spending Group (Two Groups)", 
       x = "Spending Group", 
       y = "Mean Discounts to Tuition") +
  theme_minimal()

# Barplot for means: Gifts
ggplot(group_means, aes(x = total_ops_group, y = gifts, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Gifts by Athletic Spending Group (Two Groups)", 
       x = "Spending Group", 
       y = "Mean Gifts") +
  theme_minimal()

# Barplot for means: Research Expenditure
ggplot(group_means, aes(x = total_ops_group, y = research_expenditure, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Research Expenditure by Athletic Spending Group (Two Groups)", 
       x = "Spending Group", 
       y = "Mean Research Expenditure") +
  theme_minimal()

# Barplot for means: Graduation Rate
ggplot(group_means, aes(x = total_ops_group, y = graduation_rate, fill = total_ops_group)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(title = "Mean Graduation Rate by Athletic Spending Group (Two Groups)", 
       x = "Spending Group", 
       y = "Mean Graduation Rate") +
  theme_minimal()

```


## Which Schools has the most spending? Which schools has the least athletic spending? 
```{r}
# Select top 20 schools by total expenditure
top_schools <- means_df %>%
  arrange(desc(total_ops)) %>%
  slice_head(n = 20)

# Set the order of `school_name` based on the ranking of total expenditure
top_schools <- top_schools %>%
  mutate(school_name = factor(school_name, levels = school_name[order(desc(total_ops))]))

# Ensure the school names are ranked by total_ops
top_schools <- top_schools %>%
  mutate(school_name.x = factor(school_name, levels = school_name[order(desc(total_ops))]))

# Barplot for top 20 schools expenditures (normalized per student)
ggplot(top_schools, aes(x = reorder(school_name, total_ops), y = total_ops)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() +  
  labs(title = "Sports Expenditure Top 20 schools",
       x = "School Name",
       y = "Sports Expenditure Per Student (USD)",
       caption = "Data: Means across 2018â€“2022 (Normalized Per Student)") +
  theme_minimal()

```

```{r}
# Select bottom 20 schools by total expenditure
least_spendy_schools <- means_df %>%
  arrange(total_ops) %>%  # Arrange in ascending order
  slice_head(n = 20)  # Select the first 20 rows

# Ensure the school names are ranked by total expenditure (descending order)
least_spendy_schools <- least_spendy_schools %>%
  mutate(school_name.x = factor(school_name, levels = school_name[order(desc(total_ops))]))

# Barplot for 20 least spendy schools expenditures
ggplot(least_spendy_schools, aes(x = reorder(school_name.x, -total_ops), y = total_ops)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() +  # Flip the coordinates for a horizontal bar chart
  labs(title = "Sports Expenditure 20 Least Spendy Schools",
       x = "School Name",
       y = "Sports Expenditure Per Student (USD)",
       caption = "Data: Means across 2018â€“2022 (Normalized Per Student)") +
  theme_minimal()
```

```{r}
ggplot(least_spendy_schools, aes(x = school_name, y = discounts_to_tuition)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() +  
  labs(
    title = "Tuition Discounts for Bottom 20 Schools",
    x = "School Name",
    y = "Tuition Discounts",
    caption = "Data: Means across 2018-2022"
  ) +
  theme_minimal()

ggplot(least_spendy_schools, aes(x = school_name, y = gifts)) +
  geom_bar(stat = "identity", fill = "orange", alpha = 0.8) +
  coord_flip() +
  labs(title = "Gifts for Bottom 20 Schools",
       x = "School Name",
       y = "Gifts",
       caption = "Data: Means across 2018-2022")

ggplot(least_spendy_schools, aes(x = school_name, y = research_expenditure)) +
  geom_bar(stat = "identity", fill = "darkgreen", alpha = 0.8) +
  coord_flip() +
  labs(title = "Research Expenditure for Bottom 20 Schools",
       x = "School Name",
       y = "Research Expenditure",
       caption = "Data: Means across 2018-2022")


ggplot(least_spendy_schools, aes(x = school_name, y = graduation_rate)) +
  geom_bar(stat = "identity", fill = "purple", alpha = 0.8) +
  coord_flip() +
  labs(title = "Graduation Rate for Bottom 20 Schools",
       x = "School Name",
       y = "Graduation Rate",
       caption = "Data: Means across 2018-2022")

```

```{r}
ggplot(top_schools, aes(x = school_name, y = discounts_to_tuition)) +
  geom_bar(stat = "identity", fill = "steelblue", alpha = 0.8) +
  coord_flip() +  
  labs(
    title = "Tuition Discounts Top 20 Schools",
    x = "School Name",
    y = "Tuition Discounts Per Student (USD)",
    caption = "Data: Means across 2018-2022"
  ) +
  theme_minimal()

ggplot(top_schools, aes(x = school_name, y = gifts)) +
  geom_bar(stat = "identity", fill = "orange", alpha = 0.8) +
  coord_flip() +
  labs(title = "Gifts for Top 20 Schools",
       x = "School Name",
       y = "Gifts Per Student (USD)",
       caption = "Data: Means across 2018-2022")

ggplot(top_schools, aes(x = school_name, y = research_expenditure)) +
  geom_bar(stat = "identity", fill = "darkgreen", alpha = 0.8) +
  coord_flip() +
  labs(title = "Research Expenditure for Top 20 Schools",
       x = "School Name",
       y = "Research Expenditure Per Student (USD)",
       caption = "Data: Means across 2018-2022")


ggplot(top_schools, aes(x = school_name, y = graduation_rate)) +
  geom_bar(stat = "identity", fill = "purple", alpha = 0.8) +
  coord_flip() +
  labs(title = "Graduation Numbers for Top 20 Schools",
       x = "School Name",
       y = "Normalized Number of Graduates",
       caption = "Data: Means across 2018-2022")

```



```{r}
# Select relevant numeric columns
correlation_data <- means_df %>%
  select(total_ops, gifts, research_expenditure, graduation_rate, discounts_to_tuition)

# Compute correlation matrix
correlation_matrix <- round(cor(correlation_data, use = "complete.obs"), 2)

# Convert to long format for heatmap
library(reshape2)
correlation_long <- melt(correlation_matrix)

# Heatmap with enhanced readability
ggplot(correlation_long, aes(x = Var1, y = Var2, fill = value)) +
  geom_tile(color = "white") +
  geom_text(aes(label = value), color = "black", size = 4) +  # Add correlation values
  scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0,
                       limits = c(-1, 1), name = "Correlation") +
  labs(title = "Correlation Between Spending and Benefits",
       x = "",
       y = "",
       fill = "Correlation") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels
        axis.text.y = element_text(size = 10))


```


## Correlation between each dependent variable & all indp. variables
```{r}
# Independent Variables vs discounts_to_tuition
selected_data <- means_df %>%
  select(coach_comp_third, support_comp, coach_comp, guarantees, severance, recruiting, 
         team_travel, equip, game_expenses, marketing, camps, spirits, facilities, overhead, 
         indirect_institutional, medical, membership, meals, otherops, bowl_expenses, prof_def, 
         bowl_coachcomp, discounts_to_tuition)

# Compute correlation matrix
correlation_matrix <- cor(selected_data, use = "complete.obs")

# Subset correlations for discounts_to_tuition
correlation_subset <- correlation_matrix[1:22, "discounts_to_tuition", drop = FALSE]

# Convert to long format
correlation_long <- as.data.frame(correlation_subset) %>%
  rownames_to_column(var = "Independent_Variable") %>%
  rename(Correlation = discounts_to_tuition)

# Create heatmap
ggplot(correlation_long, aes(x = reorder(Independent_Variable, -Correlation), 
                              y = "discounts_to_tuition", fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0) +
  labs(title = "Correlation: Independent Variables vs Discounts to Tuition",
       x = "Independent Variables",
       y = "Discounts to Tuition (Dependent Variable)",
       fill = "Correlation") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

```{r}
# Independent Variables vs gifts
selected_data <- means_df %>%
  select(coach_comp_third, support_comp, coach_comp, guarantees, aid, severance, recruiting, 
         team_travel, equip, game_expenses, marketing, camps, spirits, facilities, overhead, 
         indirect_institutional, medical, membership, meals, otherops, bowl_expenses, prof_def, 
         bowl_coachcomp, gifts)

# Compute correlation matrix
correlation_matrix <- cor(selected_data, use = "complete.obs")

# Subset correlations for gifts
correlation_subset <- correlation_matrix[1:23, "gifts", drop = FALSE]

# Convert to long format
correlation_long <- as.data.frame(correlation_subset) %>%
  rownames_to_column(var = "Independent_Variable") %>%
  rename(Correlation = gifts)

# Create heatmap
ggplot(correlation_long, aes(x = reorder(Independent_Variable, -Correlation), 
                              y = "gifts", fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0) +
  labs(title = "Correlation: Independent Variables vs Gifts",
       x = "Independent Variables",
       y = "Gifts (Dependent Variable)",
       fill = "Correlation") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```


```{r}
# Independent Variables vs research_expenditure
selected_data <- means_df %>%
  select(coach_comp_third, support_comp, coach_comp, guarantees, aid, severance, recruiting, 
         team_travel, equip, game_expenses, marketing, camps, spirits, facilities, overhead, 
         indirect_institutional, medical, membership, meals, otherops, bowl_expenses, prof_def, 
         bowl_coachcomp, research_expenditure)

# Compute correlation matrix
correlation_matrix <- cor(selected_data, use = "complete.obs")

# Subset correlations for research_expenditure
correlation_subset <- correlation_matrix[1:23, "research_expenditure", drop = FALSE]

# Convert to long format
correlation_long <- as.data.frame(correlation_subset) %>%
  rownames_to_column(var = "Independent_Variable") %>%
  rename(Correlation = research_expenditure)

# Create heatmap
ggplot(correlation_long, aes(x = reorder(Independent_Variable, -Correlation), 
                              y = "research_expenditure", fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0) +
  labs(title = "Correlation: Independent Variables vs Research Expenditure",
       x = "Independent Variables",
       y = "Research Expenditure (Dependent Variable)",
       fill = "Correlation") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```


```{r}
# Independent Variables vs graduation_rate
selected_data <- means_df %>%
  select(coach_comp_third, support_comp, coach_comp, guarantees, aid, severance, recruiting, 
         team_travel, equip, game_expenses, marketing, camps, spirits, facilities, overhead, 
         indirect_institutional, medical, membership, meals, otherops, bowl_expenses, prof_def, 
         bowl_coachcomp, graduation_rate)

# Compute correlation matrix
correlation_matrix <- cor(selected_data, use = "complete.obs")

# Subset correlations for graduation_rate
correlation_subset <- correlation_matrix[1:23, "graduation_rate", drop = FALSE]

# Convert to long format
correlation_long <- as.data.frame(correlation_subset) %>%
  rownames_to_column(var = "Independent_Variable") %>%
  rename(Correlation = graduation_rate)

# Create heatmap
ggplot(correlation_long, aes(x = reorder(Independent_Variable, -Correlation), 
                              y = "graduation_rate", fill = Correlation)) +
  geom_tile(color = "white") +
  scale_fill_gradient2(low = "red", high = "blue", mid = "white", midpoint = 0) +
  labs(title = "Correlation: Independent Variables vs Graduation Rate",
       x = "Independent Variables",
       y = "Graduation Rate (Dependent Variable)",
       fill = "Correlation") +
  theme_minimal(base_size = 12) +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```
  
## Which specific indp. variable correlate to benefits? 

```{r}
# Predicting discounts_to_tuition
m_discounts_to_tuition <- lm(discounts_to_tuition ~ team_travel + support_comp + coach_comp + recruiting + equip + meals + facilities + overhead + guarantees, data = means_df)
summary(m_discounts_to_tuition)
```

```{r}
# Predicting gifts
model_gifts <- lm(gifts ~ support_comp + meals + coach_comp + team_travel + overhead + equip + medical + aid + recruiting, data = means_df)
summary(model_gifts)
```
```{r}
summary(means_df$gifts, na.rm = TRUE)
```

```{r}
# Predicting research_expenditure
model_research_expenditure <- lm(research_expenditure ~ support_comp + coach_comp + team_travel + overhead + aid + meals, data = means_df)
summary(model_research_expenditure)
```

```{r}
# Predicting graduation_rate
model_graduation_rate <- lm(graduation_rate ~ spirits + aid + medical + team_travel + recruiting, data = means_df)
summary(model_graduation_rate)
```
